# 0) ניקוי שאריות (לא חובה, פשוט מונע התנגשויות שמות):
docker rm -f mt-api es8 2>/dev/null || true
docker network rm esnet 2>/dev/null || true

# 1) בניית אימג' ה-API:
docker build -t malicious-text-api:latest .

# 2) יצירת רשת משותפת:
docker network create esnet 2>/dev/null || true

# 3) Elasticsearch (8.15.0) על אותה רשת:
docker run -d --name es8 --network esnet \
  -e "discovery.type=single-node" \
  -e "xpack.security.enabled=false" \
  -e "xpack.license.self_generated.type=trial" \
  -e "ES_JAVA_OPTS=-Xms1g -Xmx1g" \
  -p 9200:9200 -p 9300:9300 \
  docker.elastic.co/elasticsearch/elasticsearch:8.15.0

# 4) להמתין שהוא מוכן (health check מאותה רשת):
docker run --rm --network esnet curlimages/curl:8.7.1 -sS --retry 30 --retry-delay 2 http://es8:9200

# 5) ה-API (מדבר ל- http://es8:9200):
docker run --name mt-api --rm --network esnet -p 8000:8000 \
  -e ES_URL=http://es8:9200 \
  -e INDEX_NAME=malicious_text \
  -e CSV_PATH="data/tweets.csv" \
  -e WEAPON_LIST_PATH="data/weapon_list.txt" \
  -e INIT_DATA=true \
  -e FORCE_RECREATE=false \
  malicious-text-api:latest

# 6) בדיקות:
curl http://localhost:8000/status
curl "http://localhost:8000/clean-data?limit=50"
curl http://localhost:8000/antisemitic-with-weapons
curl http://localhost:8000/two-or-more-weapons
